//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLight;         // Offset:    0, size:   32
    float4x4 gWorld;                    // Offset:   32, size:   64
    float4x4 gViewProj;                 // Offset:   96, size:   64
    float4x4 gWorldViewProj;            // Offset:  160, size:   64
    float4x4 gWorldInvTranspose;        // Offset:  224, size:   64
    float4x4 gInvViewProj;              // Offset:  288, size:   64
    float4x4 gInvProj;                  // Offset:  352, size:   64
    float3  gEyePosW;                   // Offset:  416, size:   12
    float   gTime;                      // Offset:  428, size:    4
    bool    bSelected;                  // Offset:  432, size:    4
}

//
// 11 local object(s)
//
SamplerState TextureSampler
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
    AddressW = uint(CLAMP /* 3 */);
    BorderColor = float4(0, 0, 0, 0);
};
SamplerState ShadowTextureSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
};
SamplerState TextureMipSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
    AddressW = uint(CLAMP /* 3 */);
    BorderColor = float4(0, 0, 0, 0);
};
SamplerState LUTSampler
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
    AddressW = uint(CLAMP /* 3 */);
    BorderColor = float4(0, 0, 0, 0);
};
SamplerState ObjTextureSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
    AddressW = uint(WRAP /* 1 */);
    BorderColor = float4(0, 0, 0, 0);
};
SamplerState g_samLinearClamp
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(8);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
Texture2D DiffuseMap;
Texture2D SpecularMap;
Texture2D NormalMap;
TextureCube SkyBoxCubeMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 2 technique(s)
    //
    technique11 BasicMaterialTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Color;                  // Offset:    0
                //       float3 Direction;              // Offset:   16
                //       float Pad;                     // Offset:   28
                //
                //   } gDirLight;                       // Offset:    0 Size:    32 [unused]
                //   float4x4 gWorld;                   // Offset:   32 Size:    64
                //   float4x4 gViewProj;                // Offset:   96 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  160 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  224 Size:    64 [unused]
                //   float4x4 gInvViewProj;             // Offset:  288 Size:    64 [unused]
                //   float4x4 gInvProj;                 // Offset:  352 Size:    64 [unused]
                //   float3 gEyePosW;                   // Offset:  416 Size:    12 [unused]
                //   float gTime;                       // Offset:  428 Size:     4 [unused]
                //   bool bSelected;                    // Offset:  432 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TANGENT                  0   xyz         2     NONE   float   xyz 
                // BINORMAL                 0   xyz         3     NONE   float   xyz 
                // COLOR                    0   xyzw        4     NONE   float   xyzw
                // TEXCOORD                 0   xy          5     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TANGENT                  0   xyz         2     NONE   float   xyz 
                // BINORMAL                 0   xyz         3     NONE   float   xyz 
                // NORMAL                   0   xyz         4     NONE   float   xyz 
                // TEXCOORD                 0   xy          5     NONE   float   xy  
                // COLOR                    0   xyzw        6     NONE   float   xyzw
                // TEXTURE                  0   xyzw        7     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_input v5.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xyz
                dcl_output o5.xy
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 7
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[2].xyzw
                dp4 r1.y, r0.xyzw, cb0[3].xyzw
                dp4 r1.z, r0.xyzw, cb0[4].xyzw
                mov r2.xyz, v3.xyzx
                mov r3.xyz, v2.xyzx
                mov r4.xyz, v1.xyzx
                dp4 r5.x, r0.xyzw, cb0[10].xyzw
                dp4 r5.y, r0.xyzw, cb0[11].xyzw
                dp4 r5.z, r0.xyzw, cb0[12].xyzw
                dp4 r5.w, r0.xyzw, cb0[13].xyzw
                mov r0.xy, v5.xyxx
                mov r6.xyzw, v4.xyzw
                mov r5.xyzw, r5.xyzw
                mov o0.xyzw, r5.xyzw
                mov o6.xyzw, r6.xyzw
                mov o7.xyzw, r5.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r3.xyzx
                mov o3.xyz, r2.xyzx
                mov o4.xyz, r4.xyzx
                mov o5.xy, r0.xyxx
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Color;                  // Offset:    0
                //       float3 Direction;              // Offset:   16
                //       float Pad;                     // Offset:   28
                //
                //   } gDirLight;                       // Offset:    0 Size:    32 [unused]
                //   float4x4 gWorld;                   // Offset:   32 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:   96 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  160 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  224 Size:    64 [unused]
                //   float4x4 gInvViewProj;             // Offset:  288 Size:    64 [unused]
                //   float4x4 gInvProj;                 // Offset:  352 Size:    64 [unused]
                //   float3 gEyePosW;                   // Offset:  416 Size:    12 [unused]
                //   float gTime;                       // Offset:  428 Size:     4 [unused]
                //   bool bSelected;                    // Offset:  432 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samAnisotropic                    sampler      NA          NA             s0      1 
                // DiffuseMap                        texture  float4          2d             t0      1 
                // SpecularMap                       texture  float4          2d             t1      1 
                // NormalMap                         texture  float4          2d             t2      1 
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // TANGENT                  0   xyz         2     NONE   float   xyz 
                // BINORMAL                 0   xyz         3     NONE   float   xyz 
                // NORMAL                   0   xyz         4     NONE   float   xyz 
                // TEXCOORD                 0   xy          5     NONE   float   xy  
                // COLOR                    0   xyzw        6     NONE   float       
                // TEXTURE                  0   xyzw        7     NONE   float    yzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                // SV_Target                1   xyzw        1   TARGET   float   xyzw
                // SV_Target                2   xyzw        2   TARGET   float   xyzw
                // SV_Target                3   xyzw        3   TARGET   float   xyzw
                // SV_Target                4   xyzw        4   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[28], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xyz
                dcl_input_ps linear v5.xy
                dcl_input_ps linear v7.yzw
                dcl_output o0.xyzw
                dcl_output o1.xyzw
                dcl_output o2.xyzw
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 6
                dp3 r0.x, v4.xyzx, v4.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v4.xyzx
                dp3 r0.w, v2.xyzx, v2.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, v2.xyzx
                dp3 r0.w, v3.xyzx, v3.xyzx
                rsq r0.w, r0.w
                mul r2.xyz, r0.wwww, v3.xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                mov r2.xyz, r2.xyzx
                sample_indexable(texture2d)(float,float,float,float) r3.xyz, v5.xyxx, t2.xyzw, s0
                mov r3.xyz, r3.xyzx
                mov r4.x, r1.x
                mov r4.y, r2.x
                mov r4.z, r0.x
                mov r5.x, r1.y
                mov r5.y, r2.y
                mov r5.z, r0.y
                mov r0.x, r1.z
                mov r0.y, r2.z
                mov r0.z, r0.z
                mul r1.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                mov r2.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
                add r1.xyz, r1.xyzx, r2.xyzx
                dp3 r2.x, r1.xyzx, r4.xyzx
                dp3 r2.y, r1.xyzx, r5.xyzx
                dp3 r2.z, r1.xyzx, r0.xyzx
                mov r2.xyz, r2.xyzx
                mov r2.xyz, r2.xyzx
                add r0.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                sample_indexable(texture2d)(float,float,float,float) r0.w, v5.xyxx, t2.xyzw, s0
                mov r0.w, r0.w
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v5.xyxx, t0.xyzw, s0
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v5.xyxx, t1.xyzw, s0
                lt r3.x, v5.x, l(0.000000)
                lt r3.y, l(1.000000), v5.x
                or r3.x, r3.y, r3.x
                lt r3.y, v5.y, l(0.000000)
                or r3.x, r3.y, r3.x
                lt r3.y, l(1.000000), v5.y
                or r3.x, r3.y, r3.x
                mov r3.yz, l(0,1.000000,1.000000,0)
                mov r4.xy, l(0,1.000000,0,0)
                movc r3.xy, r3.xxxx, r3.yzyy, r4.xyxx
                mov r3.zw, v5.xxxy
                mov r4.xyz, v7.yzwy
                ine r4.w, l(0, 0, 0, 0), cb0[27].x
                and r4.w, r4.w, l(0x3f800000)
                mov o0.xyzw, r1.xyzw
                mov o1.xyzw, r2.xyzw
                mov o2.xyzw, r0.xyzw
                mov o3.x, r4.w
                mov o3.yzw, r4.xxyz
                mov o4.xy, r3.zwzz
                mov o4.zw, r3.xxxy
                ret 
                // Approximately 59 instruction slots used
                            
            };
        }

    }

    technique11 SkyBoxTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Color;                  // Offset:    0
                //       float3 Direction;              // Offset:   16
                //       float Pad;                     // Offset:   28
                //
                //   } gDirLight;                       // Offset:    0 Size:    32 [unused]
                //   float4x4 gWorld;                   // Offset:   32 Size:    64
                //   float4x4 gViewProj;                // Offset:   96 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  160 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  224 Size:    64 [unused]
                //   float4x4 gInvViewProj;             // Offset:  288 Size:    64 [unused]
                //   float4x4 gInvProj;                 // Offset:  352 Size:    64 [unused]
                //   float3 gEyePosW;                   // Offset:  416 Size:    12 [unused]
                //   float gTime;                       // Offset:  428 Size:     4 [unused]
                //   bool bSelected;                    // Offset:  432 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TANGENT                  0   xyz         2     NONE   float   xyz 
                // BINORMAL                 0   xyz         3     NONE   float   xyz 
                // COLOR                    0   xyzw        4     NONE   float   xyzw
                // TEXCOORD                 0   xy          5     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TANGENT                  0   xyz         2     NONE   float   xyz 
                // BINORMAL                 0   xyz         3     NONE   float   xyz 
                // NORMAL                   0   xyz         4     NONE   float   xyz 
                // TEXCOORD                 0   xy          5     NONE   float   xy  
                // COLOR                    0   xyzw        6     NONE   float   xyzw
                // TEXTURE                  0   xyzw        7     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xyz
                dcl_input v4.xyzw
                dcl_input v5.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xyz
                dcl_output o5.xy
                dcl_output o6.xyzw
                dcl_output o7.xyzw
                dcl_temps 7
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[2].xyzw
                dp4 r1.y, r0.xyzw, cb0[3].xyzw
                dp4 r1.z, r0.xyzw, cb0[4].xyzw
                mov r2.xyz, v3.xyzx
                mov r3.xyz, v2.xyzx
                mov r4.xyz, v1.xyzx
                dp4 r5.x, r0.xyzw, cb0[10].xyzw
                dp4 r5.y, r0.xyzw, cb0[11].xyzw
                dp4 r5.z, r0.xyzw, cb0[12].xyzw
                dp4 r5.w, r0.xyzw, cb0[13].xyzw
                mov r0.xy, v5.xyxx
                mov r6.xyzw, v4.xyzw
                mov r5.xyzw, r5.xyzw
                mov o0.xyzw, r5.xyzw
                mov o6.xyzw, r6.xyzw
                mov o7.xyzw, r5.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r3.xyzx
                mov o3.xyz, r2.xyzx
                mov o4.xyz, r4.xyzx
                mov o5.xy, r0.xyxx
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samAnisotropic                    sampler      NA          NA             s0      1 
                // SkyBoxCubeMap                     texture  float4        cube             t0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TANGENT                  0   xyz         2     NONE   float       
                // BINORMAL                 0   xyz         3     NONE   float       
                // NORMAL                   0   xyz         4     NONE   float   xyz 
                // TEXCOORD                 0   xy          5     NONE   float   xy  
                // COLOR                    0   xyzw        6     NONE   float       
                // TEXTURE                  0   xyzw        7     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                // SV_Target                1   xyzw        1   TARGET   float   xyzw
                // SV_Target                2   xyzw        2   TARGET   float   xyzw
                // SV_Target                3   xyzw        3   TARGET   float   xyzw
                // SV_Target                4   xyzw        4   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texturecube (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v4.xyz
                dcl_input_ps linear v5.xy
                dcl_output o0.xyzw
                dcl_output o1.xyzw
                dcl_output o2.xyzw
                dcl_output o3.xyzw
                dcl_output o4.xyzw
                dcl_temps 5
                dp3 r0.x, v1.xyzx, v1.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v1.xyzx
                itof r0.w, l(0)
                sample_l_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t0.xyzw, s0, r0.w
                mov r1.xyzw, l(0,0,0,0)
                add r2.xyz, v4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                mov r2.w, l(-2.000000)
                mov r3.xy, v5.xyxx
                mov r3.zw, l(0,0,0,0)
                mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                mov o0.xyzw, r0.xyzw
                mov o1.xyzw, r1.xyzw
                mov o2.xyzw, r2.xyzw
                mov o3.xyzw, r4.xyzw
                mov o4.xyzw, r3.xyzw
                ret 
                // Approximately 18 instruction slots used
                            
            };
        }

    }

}

